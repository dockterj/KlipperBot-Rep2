[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=_BEEPER_pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=_BEEPER_pin VALUE=0

[gcode_macro M72]
gcode:

    {% if params.P|int == 9 %}
    M300 S294 P220 ;N1 D4 1/8
    M300 S311 P220 ;N2 D#4 1/8
    M300 S330 P220 ;N3 E4 1/8
    M300 S523 P460 ;N4 C5 1/4
    M300 S330 P220 ;N5 E4 1/8
    M300 S523 P230 ;N6 C5 1/8
    M300 S330 P220 ;N7 E4 1/8
    M300 S523 P230 ;N8 C5 1/8
    M300 S523 P950 ;N9 C5 1/2
    M300 S523 P220 ;N10 C5 1/8
    M300 S523 P220 ;N11 C5 1/8
    M300 S587 P220 ;N12 D5 1/8
    M300 S622 P220 ;N13 D#5 1/8
    M300 S659 P220 ;N14 E5 1/8
    M300 S523 P220 ;N15 C5 1/8
    M300 S587 P220 ;N16 D5 1/8
    M300 S659 P230 ;N17 E5 1/8
    M300 S659 P230 ;N11 E5 1/8
    M300 S494 P220 ;N19 B4 1/8
    M300 S587 P460 ;N20 D5 1/2
    M300 S523 P1420; C5 1/2+1/4
    M300 S0 P1920; pause one measure
    {% endif %}

    {% if params.P|int == 0 %} ; print error
    M300 S659 P105 ;E5
    M300 S0 P105 ;
    M300 S494 P105 ;B4
    M300 S0 P105 ;
    M300 S294 P105 ;D4
    M300 S0 P105 ;
    {% endif %}

    {% if params.P|int == 1 %} ; print done ta-da
    M300 S880 P188 ;A5
    M300 S0 P188 ;
    M300 S1760 P188 ;A6
    M300 S0 P188 ;
    M300 S1976 P188 ;B6
    M300 S0 P188 ;
    M300 S2093 P188 ;C7
    M300 S2217 P188 ;CS7
    M300 S0 P188 ;
    M300 S3520 P188 ;A7
    M300 S0 P0 ;
    {% endif %}

    {% if params.P|int == 3 %} ; startup
    M300 S3520 P288 ;A7
    M300 S0 P188 ;
    M300 S4435 P188 ;CS8
    M300 S0 P188 ;
    M300 S4699 P433 ;D8
    M300 S0 P0 ;
    {% endif %}

    {% if params.P|int == 4 %} ; makerbot tv
    M300 S3520 P200 ;A7
    M300 S0 P20 ;
    M300 S3520 P200 ;A7
    M300 S0 P20 ;
    M300 S3729 P400 ;AS7
    M300 S0 P20 ;
    M300 S4186 P400 ;C8
    M300 S0 P20 ;
    M300 S3520 P800 ;A7
    M300 S0 P0 ;
    {% endif %}

    {% if params.P|int == 5 %} ; Beethoven 5th
    M300 S1480 P200 ;FS6
    M300 S0 P20 ;
    M300 S1480 P200 ;FS6
    M300 S0 P20 ;
    M300 S1480 P200 ;FS6
    M300 S0 P20 ;
    M300 S1245 P1200 ;DS6
    M300 S0 P20 ;
    M300 S1397 P200 ;F6
    M300 S0 P20 ;
    M300 S1397 P200 ;F6
    M300 S0 P20 ;
    M300 S1397 P200 ;F6
    M300 S0 P20 ;
    M300 S1175 P1200 ;D6
    M300 S0 P20 ;
    M300 S0 P0 ;
    {% endif %}

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset extruder distance
    g92 E0
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.095
    # Set origin accurately.  This may be different based on
    # different build plates.
    SET_GCODE_OFFSET X=32
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

######################################################################
# G130: Set digital potentiometer value
######################################################################

# The macro below uses the MCP4018 SET_DIGIPOT command to implement
# a `G130` as used on classic Mightyboard-based printers such as
# The Makerbot Replicator 2/2X.
#
# The `G130` command can be used to lower the stepper current
# during preheating and raise the current again prior to starting
# the print.  This is necessary for printers with smaller power
# supplies that needed all the power to heat the bed.
#
# This macro requires one or more [mcp4018] configuration sections:
# (x_axis_pot, y_axis_pot, z_axis_pot, a_axis_pot, b_axis_pot)
#
# Example: G130 X20 Y20 Z20 A20 B20 ; Lower stepper Vrefs while heating

[gcode_macro G130]
gcode:
  M400
  {% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
    {% set x_value = params['X']|float %}
    {% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
    SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
  {% endif %}
  {% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
    {% set y_value = params['Y']|float %}
    {% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
    SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
  {% endif %}
  {% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
    {% set z_value = params['Z']|float %}
    {% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
    SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
  {% endif %}
  {% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
    {% set a_value = params['A']|float %}
    {% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
    SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
  {% endif %}
  {% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
    {% set b_value = params['B']|float %}
    {% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
    SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
  {% endif %}
